# LDBC SNB Implementation for JanusGraph

Start JanusGraph Server:
`bin/gremlin-server.sh conf/gremlin-server/gremlin-server-berkeleyje.yaml`

Run validation:
`java -cp "target/janusgraph-1.0-SNAPSHOT.jar:target/dependencies/*" com.ldbc.driver.Client -P validation/interactive-validate.properties`

Start JanusGraph console (used for testing): 
```
bin/gremlin.sh
graph = JanusGraphFactory.open('conf/janusgraph-berkeleyje.properties')
g = graph.traversal()
```

Passing Validation:
+ Short Reads 7/7
+ Complex Reads 8/14
+ Updates 8/8

## Validation Sets ##

This repository contains 4 validation sets. Each sets contains a `social_network` and `substitution_parameters`, along with `validation_params.csv`. 

### Validation Set 3 ###

SF0.3 format CSV
 CSV: Data output in CSV format, one file per different entity and on file per different relation. Also, there is a file for those attributes whose cardinality is larger than one (i.e. Person.email, Person.speaks).
 taken from neo4j folder in ldbc repo with String date 
 
 11929 operations 
 
 must run sh preprocessing before loading 
 estimate run time 

| Update | GraphElement                     | BulkLoad | Validation | Total |   
|--------|----------------------------------|----------|------------|-------|
| 1      | `(Person)`                       | 2747     | 22         | 2769  |
| 2      | `(Person)-[:likes]->(Post)`      | 36658    | 283        | 36941 |
| 3      | `(Person)-[:likes]->(Comment)`   | 46737    | 162        | 46899 |
| 4      | `(Forum)`                        | 10032    | 22         | 10054 |
| 5      | `(Person)-[:hasMember]->(Forum)` | 145407   | 1056       | 146463|
| 6      | `(Post)`                         | 79339    | 205        | 79544 |  
| 7      | `(Comment)`                      | 94241    | 283        | 94524 |
| 8      | `(Person)-[:knows]->(Person)`    | 31046    | 119        | 31165 |   

### Validation Set 2 ###

Taken from sparksee repo 
18098 ops
csv format 
SF0.2

### Validation Set 3 ###

Generated using neo4j implementation in repo
SF0.3 
1321 ops
CSVComposite: Similar to the CSV format, but uses composite attributes for storing the Person.email, Person.speaks attributes.



## Step-by-step Guide ##

1. sh delete-db.sh
2. choose validation set and load, look for 




